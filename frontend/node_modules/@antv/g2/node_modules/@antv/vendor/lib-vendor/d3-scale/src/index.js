"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    scaleBand: function() {
        return _band.default;
    },
    scaleDiverging: function() {
        return _diverging.default;
    },
    scaleDivergingLog: function() {
        return _diverging.divergingLog;
    },
    scaleDivergingPow: function() {
        return _diverging.divergingPow;
    },
    scaleDivergingSqrt: function() {
        return _diverging.divergingSqrt;
    },
    scaleDivergingSymlog: function() {
        return _diverging.divergingSymlog;
    },
    scaleIdentity: function() {
        return _identity.default;
    },
    scaleImplicit: function() {
        return _ordinal.implicit;
    },
    scaleLinear: function() {
        return _linear.default;
    },
    scaleLog: function() {
        return _log.default;
    },
    scaleOrdinal: function() {
        return _ordinal.default;
    },
    scalePoint: function() {
        return _band.point;
    },
    scalePow: function() {
        return _pow.default;
    },
    scaleQuantile: function() {
        return _quantile.default;
    },
    scaleQuantize: function() {
        return _quantize.default;
    },
    scaleRadial: function() {
        return _radial.default;
    },
    scaleSequential: function() {
        return _sequential.default;
    },
    scaleSequentialLog: function() {
        return _sequential.sequentialLog;
    },
    scaleSequentialPow: function() {
        return _sequential.sequentialPow;
    },
    scaleSequentialQuantile: function() {
        return _sequentialQuantile.default;
    },
    scaleSequentialSqrt: function() {
        return _sequential.sequentialSqrt;
    },
    scaleSequentialSymlog: function() {
        return _sequential.sequentialSymlog;
    },
    scaleSqrt: function() {
        return _pow.sqrt;
    },
    scaleSymlog: function() {
        return _symlog.default;
    },
    scaleThreshold: function() {
        return _threshold.default;
    },
    scaleTime: function() {
        return _time.default;
    },
    scaleUtc: function() {
        return _utcTime.default;
    },
    tickFormat: function() {
        return _tickFormat.default;
    }
});
var _band = /*#__PURE__*/ _interop_require_wildcard(require("./band.js"));
var _identity = /*#__PURE__*/ _interop_require_default(require("./identity.js"));
var _linear = /*#__PURE__*/ _interop_require_default(require("./linear.js"));
var _log = /*#__PURE__*/ _interop_require_default(require("./log.js"));
var _symlog = /*#__PURE__*/ _interop_require_default(require("./symlog.js"));
var _ordinal = /*#__PURE__*/ _interop_require_wildcard(require("./ordinal.js"));
var _pow = /*#__PURE__*/ _interop_require_wildcard(require("./pow.js"));
var _radial = /*#__PURE__*/ _interop_require_default(require("./radial.js"));
var _quantile = /*#__PURE__*/ _interop_require_default(require("./quantile.js"));
var _quantize = /*#__PURE__*/ _interop_require_default(require("./quantize.js"));
var _threshold = /*#__PURE__*/ _interop_require_default(require("./threshold.js"));
var _time = /*#__PURE__*/ _interop_require_default(require("./time.js"));
var _utcTime = /*#__PURE__*/ _interop_require_default(require("./utcTime.js"));
var _sequential = /*#__PURE__*/ _interop_require_wildcard(require("./sequential.js"));
var _sequentialQuantile = /*#__PURE__*/ _interop_require_default(require("./sequentialQuantile.js"));
var _diverging = /*#__PURE__*/ _interop_require_wildcard(require("./diverging.js"));
var _tickFormat = /*#__PURE__*/ _interop_require_default(require("./tickFormat.js"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
